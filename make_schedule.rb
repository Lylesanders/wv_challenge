require_relative 'scheduler'

@student_list=[]
pass_number = 0
#currently this program is set up to make 1 schedule in an array that can be written to a CSV file
# the section of code that follows will be in another loop that will generate the schedule 1000 times
#the schedule that is generated will be compared by a scoring system that will keep only 5 of the 1000 schedules
# If the current_schedule is one of the top 5 values then a filename will be generated and the array will be 
#read into a cswv file.
#if it isn't one of the top 5 schedules then the program will generate another current_schedule
#If after being writen, another schedule pushes it out of the top 5 then it will be deleted and
#the new schedule will be save as part of the top 5


current_schedule = Schedule.new

file_name = "make_student.csv"
#this is the test file with 106 entries for "students" and sill need to be changed for the final program
class_file = "classes.csv"
# this file will need to have an editor somewhere else. This is the perminant filename 
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ this section will be inside another loop
while pass_number < 5 do
	current_schedule.student_list(file_name) #opens the students file and reads it into memory as student_list
	current_schedule.class_list(class_file)  # reads the class list and enrollment numbers into memory as class_list
	until current_schedule.students_list.length == 0 do
		#	puts students_list.length
		current_schedule.students
		current_schedule.student_schedule
	end
	# #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ end of section
if current_schedule.compair_schedule?(@top_five) == true
	puts "we have a winner"
else 
	puts "current schedule rejected"
	end

	make_file = pass_number.to_s + "_schdeule.csv"
	# # The make_file_name will be generated by taking the pass number and adding it to _schedule.csv
	# # make_file_name = pass_number + "_schdeule.csv"
	current_schedule.output_schedule(make_file)

	
	pass_number +=1
end # while

puts "end of schedule process"
